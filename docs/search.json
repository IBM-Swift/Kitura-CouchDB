{"Protocols/Logger.html#/s:FP9LoggerAPI6Logger3logFTOS_17LoggerMessageType3msgSS12functionNameSS7lineNumSi8fileNameSS_T_":{"name":"log(_:msg:functionName:lineNum:fileName:)","abstract":"<p>Output a logged message.</p>","parent_name":"Logger"},"Protocols/Logger.html#/s:FP9LoggerAPI6Logger9isLoggingFOS_17LoggerMessageTypeSb":{"name":"isLogging(_:)","abstract":"<p>A function that will indicate if a message with a specified type (<code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/LoggerMessageType.html\">LoggerMessageType</a></code>)","parent_name":"Logger"},"Protocols/Logger.html":{"name":"Logger","abstract":"<p>A logger protocol implemented by Logger implementations. This API is used by Kitura"},"Enums/LoggerMessageType.html#/s:FO9LoggerAPI17LoggerMessageType5entryFMS0_S0_":{"name":"entry","abstract":"<p>Log message type for logging entering into a function</p>","parent_name":"LoggerMessageType"},"Enums/LoggerMessageType.html#/s:FO9LoggerAPI17LoggerMessageType4exitFMS0_S0_":{"name":"exit","abstract":"<p>Log message type for logging exiting from a function</p>","parent_name":"LoggerMessageType"},"Enums/LoggerMessageType.html#/s:FO9LoggerAPI17LoggerMessageType5debugFMS0_S0_":{"name":"debug","abstract":"<p>Log message type for logging a debugging message</p>","parent_name":"LoggerMessageType"},"Enums/LoggerMessageType.html#/s:FO9LoggerAPI17LoggerMessageType7verboseFMS0_S0_":{"name":"verbose","abstract":"<p>Log message type for logging messages in verbose mode</p>","parent_name":"LoggerMessageType"},"Enums/LoggerMessageType.html#/s:FO9LoggerAPI17LoggerMessageType4infoFMS0_S0_":{"name":"info","abstract":"<p>Log message type for logging an informational message</p>","parent_name":"LoggerMessageType"},"Enums/LoggerMessageType.html#/s:FO9LoggerAPI17LoggerMessageType7warningFMS0_S0_":{"name":"warning","abstract":"<p>Log message type for logging a warning message</p>","parent_name":"LoggerMessageType"},"Enums/LoggerMessageType.html#/s:FO9LoggerAPI17LoggerMessageType5errorFMS0_S0_":{"name":"error","abstract":"<p>Log message type for logging an error message</p>","parent_name":"LoggerMessageType"},"Enums/LoggerMessageType.html#/s:vO9LoggerAPI17LoggerMessageType11descriptionSS":{"name":"description","abstract":"<p>Convert a <code>LoggerMessageType</code> into a pritable format</p>","parent_name":"LoggerMessageType"},"Enums/LoggerMessageType.html":{"name":"LoggerMessageType","abstract":"<p>Copyright IBM Corporation 2016</p>"},"Classes/Log.html#/s:ZvC9LoggerAPI3Log6loggerGSqPS_6Logger__":{"name":"logger","abstract":"<p>An instance of the logger. It should usually be the one and only reference","parent_name":"Log"},"Classes/Log.html#/s:ZFC9LoggerAPI3Log7verboseFTKT_SS12functionNameSS7lineNumSi8fileNameSS_T_":{"name":"verbose(_:functionName:lineNum:fileName:)","abstract":"<p>Log a log message for use when in verbose logging mode.</p>","parent_name":"Log"},"Classes/Log.html#/s:ZFC9LoggerAPI3Log4infoFTKT_SS12functionNameSS7lineNumSi8fileNameSS_T_":{"name":"info(_:functionName:lineNum:fileName:)","abstract":"<p>Log an informational message.</p>","parent_name":"Log"},"Classes/Log.html#/s:ZFC9LoggerAPI3Log7warningFTKT_SS12functionNameSS7lineNumSi8fileNameSS_T_":{"name":"warning(_:functionName:lineNum:fileName:)","abstract":"<p>Log a warning message.</p>","parent_name":"Log"},"Classes/Log.html#/s:ZFC9LoggerAPI3Log5errorFTKT_SS12functionNameSS7lineNumSi8fileNameSS_T_":{"name":"error(_:functionName:lineNum:fileName:)","abstract":"<p>Log an error message.</p>","parent_name":"Log"},"Classes/Log.html#/s:ZFC9LoggerAPI3Log5debugFTKT_SS12functionNameSS7lineNumSi8fileNameSS_T_":{"name":"debug(_:functionName:lineNum:fileName:)","abstract":"<p>Log a debuging message.</p>","parent_name":"Log"},"Classes/Log.html#/s:ZFC9LoggerAPI3Log5entryFTKT_SS12functionNameSS7lineNumSi8fileNameSS_T_":{"name":"entry(_:functionName:lineNum:fileName:)","abstract":"<p>Log a message when entering a function.</p>","parent_name":"Log"},"Classes/Log.html#/s:ZFC9LoggerAPI3Log4exitFTKT_SS12functionNameSS7lineNumSi8fileNameSS_T_":{"name":"exit(_:functionName:lineNum:fileName:)","abstract":"<p>Log a message when exiting a function.</p>","parent_name":"Log"},"Classes/Log.html#/s:ZFC9LoggerAPI3Log9isLoggingFOS_17LoggerMessageTypeSb":{"name":"isLogging(_:)","abstract":"<p>A function that will indicate if a message with a specified type (<code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/LoggerMessageType.html\">LoggerMessageType</a></code>)","parent_name":"Log"},"Classes/Log.html":{"name":"Log","abstract":"<p>A class of static members used by anyone who wants to log mesages.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enums","abstract":"<p>The following enums are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"}}